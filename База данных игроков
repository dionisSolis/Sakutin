using System;
using System.Reflection.Emit;

namespace qwerty
{
    class Program
    {
        static void Main(string[] args)
        {
            const string MenuAddPlayer = "1";
            const string MenuRemovePlayer = "2";
            const string MenuBanPlayer = "3";
            const string MenuUnbanPlayer = "4";
            const string MenuExit = "5";

            Datebase datebase = new Datebase();
            bool isPlay = true;
            string userInput = "";

            while (isPlay)
            {
                Console.Clear();
                Console.WriteLine("База данных игроков\n");
                datebase.ShowPlayers();
                Console.Write($"\n\n{MenuAddPlayer})Добавить игрока\n" +
                    $"{MenuRemovePlayer})Удалить игрока по уникальному номеру\n" +
                    $"{MenuBanPlayer})Забанить игрока по уникальному номеру\n" +
                    $"{MenuUnbanPlayer})Разбанить игрока по уникальному номер\n" +
                    $"{MenuExit})Выйти\n" +
                    $"Ввод...");
                userInput = Console.ReadLine();

                switch (userInput)
                {
                    case MenuAddPlayer:
                        datebase.AddPlayer();
                        break;

                    case MenuRemovePlayer:
                        datebase.RemovePlayer();
                        break;

                    case MenuBanPlayer:
                        datebase.BanPlayer();
                        break;

                    case MenuUnbanPlayer:
                        datebase.UnbanPlayer();
                        break;

                    case MenuExit:
                        isPlay = false;
                        break;
                }

                Console.Write("Нажмите любую кнопку для продолжения...");
                Console.ReadKey();
            }
        }
    }

    class Datebase
    {
        private List<Player> _players = new List<Player> { };
        private int _idCounter = 0;

        private int InputId()
        {
            int id;

            Console.Write("\nУникальный номер: ");

            while (int.TryParse(Console.ReadLine(), out id) == false)
            {
                Console.WriteLine("Уникальный номер должен быть числом\nУникальный номер...");
            }

            return id;
        }

        public void ShowPlayers()
        {
            foreach (Player player in _players)
            {
                player.ShowInfo();
            }
        }

        public void AddPlayer()
        {
            string name;

            Console.Write("\nИмя: ");
            name = Console.ReadLine();
            _players.Add(new Player(_idCounter++, name, 0, false));
        }

        public void RemovePlayer()
        {
            Player player = GetPlayer(InputId());

            _players.Remove(player);
        }

        public void BanPlayer()
        {
            Player player = GetPlayer(InputId());

            player.Ban();
        }

        public void UnbanPlayer()
        {
            Player player = GetPlayer(InputId());

            player.Unban();
        }

        private Player GetPlayer(int id)
        {
            foreach (Player player in _players)
            {
                if (player.Id == id) 
                {
                    return player;
                }
            }

            return null;
        }
    }

    class Player
    {
        private string _name;
        private int _level;
        private bool _isBanned = false;

        public Player(int id, string name, int level, bool isBanned)
        {
            Id = id;
            _name = name;
            _level = level;
            _isBanned = isBanned;
        }

        public int Id { get; private set; }

        public void ShowInfo()
        {
            Console.WriteLine($"Уникальный номер {Id}" +
                $"\nИмя {_name}" +
                $"\nУровень {_level}" +
                $"\nБан {_isBanned}\n");
        }

        public void Ban()
        {
            _isBanned = true;
        }

        public void Unban()
        {
            _isBanned = false;
        }
    }
}
