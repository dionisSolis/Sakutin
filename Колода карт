using System;

namespace qwerty
{
    class Program
    {
        static void Main(string[] args)
        {
            const string CommandExit = "exit";

            Player player = new Player();
            Deck deck = new Deck();
            bool isPlay = true;

            Console.WriteLine("К О Л О Д А  К А Р Т\n");

            while (isPlay)
            {
                int amountOfTakingCards = 0;
                string userInput = "";

                Console.WriteLine($"В колоде {deck.GetAmountOfCards()}\nВведите количество карт для набора или {CommandExit} для выхода");

                while (userInput != CommandExit && int.TryParse(userInput, out amountOfTakingCards) == false)
                {
                    Console.Write("Ввод...");
                    userInput = Console.ReadLine();
                }

                if (userInput != CommandExit)
                {
                    if (amountOfTakingCards <= deck.GetAmountOfCards() && amountOfTakingCards >= 1)
                    {
                        for (int i = 0; i < amountOfTakingCards; i++)
                        {
                            player.AddCard(deck.GetCard());
                        }

                        Console.WriteLine("УСПЕШНО!");
                    }
                    else
                    {
                        Console.WriteLine("ОШИБКА: при вводе значения карт");
                    }
                }

                if (userInput == CommandExit || deck.GetAmountOfCards() == 0)
                {
                    isPlay = false;
                }

                Console.Write("\n\nНажмите любую кнопку для обновления...");
                Console.ReadKey();
                Console.Clear();
            }

            player.ShowInfo();
        }
    }

    class Player
    {
        private List<Card> _cards = new List<Card>();

        public void ShowInfo()
        {
            Console.WriteLine("Колода игрока\n");

            foreach (Card card in _cards)
            {
                card.ShowInfo();
            }
        }

        public void AddCard(Card card)
        {
            _cards.Add(card);
        }
    }

    class Deck
    {
        private List<Card> _cards = new List<Card>();

        public Deck()
        {
            CreateCards(_cards);
        }

        public Card GetCard()
        {
            Card card = _cards[0];

            _cards.RemoveAt(0);
            return card;
        }

        public int GetAmountOfCards()
        {
            return _cards.Count;
        }

        private void CreateCards(List<Card> _cards)
        {
            string[] suits = { "черви", "крести", "пики", "буби" };
            string[] values = { "6", "7", "8", "9", "10", "Валет", "Дама", "Король", "Туз" };

            foreach (string value in values)
            {
                foreach (string suit in suits)
                {
                    _cards.Add(new Card(value, suit));
                }
            }

            ShuffleCards();
        }

        private void ShuffleCards()
        {
            Random random = new Random();
            List<Card> newList = new List<Card>();
            int countOfCards = _cards.Count;

            while (newList.Count != countOfCards)
            {
                int index = random.Next(_cards.Count);

                newList.Add(_cards[index]);
                _cards.RemoveAt(index);
            }

            foreach (Card element in newList)
            {
                _cards.Add(element);
            }
        }
    }

    class Card
    {
        private string _value;
        private string _suit;

        public Card(string value, string suit)
        {
            _value = value;
            _suit = suit;
        }

        public void ShowInfo()
        {
            Console.WriteLine($"{_value} {_suit}");
        }
    }
}
