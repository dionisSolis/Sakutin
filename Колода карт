using System;

namespace qwerty
{
    class Program
    {
        static void Main(string[] args)
        {
            const string CommandExit = "exit";

            Player player = new Player();
            Deck deck = new Deck();
            bool isPlay = true;

            Console.WriteLine("К О Л О Д А  К А Р Т\n");

            while (isPlay)
            {
                int amountOfTakingCards = 0;
                string userInput = "";

                Console.WriteLine($"В колоде {deck.GetAmountOfCards()}\nВведите количество карт для набора или {CommandExit} для выхода");

                while (userInput != CommandExit && int.TryParse(userInput, out amountOfTakingCards) == false)
                {
                    Console.Write("Ввод...");
                    userInput = Console.ReadLine();
                }

                if (userInput != CommandExit)
                {
                    player.GetAmountOfTakingCards(amountOfTakingCards,deck.GetAmountOfCards(), deck);
                }

                if (userInput == CommandExit || deck.GetAmountOfCards() == 0)
                {
                    isPlay = false;
                }

                Console.Write("\n\nНажмите любую кнопку для обновления...");
                Console.ReadKey();
                Console.Clear();
            }

            player.ShowInfo();
        }
    }

    class Player
    {
        private List<Card> _playersCards = new List<Card>();
        public void ShowInfo()
        {
            Console.WriteLine("Колода игрока\n");

            foreach (Card card in _playersCards)
            {
                card.ShowInfo();
            }
        }

        public void GetAmountOfTakingCards(int amount, int amountCardsInDeck, Deck deck)
        {
            if (amount <= amountCardsInDeck && amount >= 1)
            {
                for (int i = 0; i < amount; i++)
                {
                    _playersCards.Add(deck.GetCard());
                }

                Console.WriteLine("УСПЕШНО!");
            }
            else
            {
                Console.WriteLine("ОШИБКА: при вводе количества карт");
            }
        }

    }
    class Deck
    {
        private List<Card> _deck = new List<Card>();
        public Deck()
        {
            FullDeck(_deck);
        }

        private void FullDeck(List<Card> deck)
        {
            string[] suits = { "черви", "крести", "пики", "буби" };
            string[] values = { "6", "7", "8", "9", "10", "Валет", "Дама", "Король", "Туз" };

            foreach (string value in values)
            {
                foreach (string suit in suits)
                {
                    deck.Add(new Card(value, suit));
                }
            }

            ShuffleList(deck);
        }

        private void ShuffleList(List<Card> list)
        {
            Random random = new Random();
            List<Card> newList = new List<Card>();
            int countOfList = list.Count;

            while (newList.Count != countOfList)
            {
                int index = random.Next(list.Count);

                newList.Add(list[index]);
                list.RemoveAt(index);
            }

            foreach (Card element in newList)
            {
                list.Add(element);
            }
        }

        public Card GetCard()
        {
            Card card = _deck[0];

            _deck.RemoveAt(0);
            return card;
        }

        public int GetAmountOfCards()
        {
            return _deck.Count;
        }
    }

    class Card
    {
        private string _value;
        private string _suit;

        public Card(string value, string suit)
        {
            _value = value;
            _suit = suit;
        }

        public void ShowInfo()
        {
            Console.WriteLine($"{_value} {_suit}");
        }
    }
}
