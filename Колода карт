using System;

namespace qwerty
{
    class Program
    {
        const string CommandExit = "exit";

        static void Main(string[] args)
        {
            Player player = new Player();

            string userInput = "";
            int amountOfCardsInDeck = 36;

            while (userInput != CommandExit && amountOfCardsInDeck > 0)
            {
                Console.Clear();

                int amountOfCardsToTake = 0;

                Console.Write($"Количество карт в колоде: {amountOfCardsInDeck}\nВведите количество карт для набора или exit для выхода\nВвод...");
                userInput = Console.ReadLine();

                if (userInput != CommandExit && int.TryParse(userInput, out amountOfCardsToTake))
                {
                    if (amountOfCardsToTake > 0 && amountOfCardsToTake <= amountOfCardsInDeck)
                    {
                        player.AddCard(amountOfCardsToTake);
                        amountOfCardsInDeck -= player.GetAmountOfPlayersCards();
                        Console.WriteLine("\nУспешно добавлено!");
                    }
                    else 
                        Console.WriteLine("\nОшибка при вводе числа");
                }
                else if (userInput == CommandExit)
                    Console.WriteLine("\nЗавершение программы");
                else
                    Console.WriteLine("\nНарушено условие ввода");

                Console.WriteLine("\n\nНажмите любую кнопку для обновления");
                Console.ReadKey();
            }

            player.ShowInfo();
        }
    }

    class Player
    {
        private List<Card> _playersCards = new List<Card> ();
        private Deck deck = new Deck();
        public void ShowInfo()
        {
            Console.WriteLine("\nКолода игрока");

            for (int i = 0; i <  _playersCards.Count; i++)
            {
                _playersCards[i].ShowInfo();
            }
        }
        public void AddCard(int amount)
        {
            for (int i = 0; i < amount; i++)
            {
                _playersCards.Add(deck.GetCard());
            }
        }

        public int GetAmountOfPlayersCards()
        {
            return _playersCards.Count;
        }

    }
    class Deck
    {
        private List<Card> _cards = new List<Card> ();
        public Deck()
        {
            string[] suits = { "черви", "крести", "пики", "буби" };
            string[] values = { "6", "7", "8", "9", "10", "Валет", "Дама", "Король", "Туз" };

            foreach (string value in values)
            {
                foreach (string suit in suits)
                {
                    _cards.Add(new Card(value, suit));
                }
            }
        }

        public Card GetCard()
        {
            Random random = new Random();
            int numberCard = random.Next(_cards.Count);
            Card card = _cards[numberCard];

            _cards.RemoveAt(numberCard);
            return card;
        }
    }

    class Card
    {
        private string _value;
        private string _suit;

        public Card(string value, string suit)
        {
            _value = value;
            _suit = suit;
        }

        public void ShowInfo()
        {
            Console.WriteLine($"{_value} {_suit}");
        }
    }
}
